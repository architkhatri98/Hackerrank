#include <iostream>
#include <cstdio>
#include <cmath>

using namespace std;

int powerSum(int x, int n, int i = 0, int sum = 0){

    /*
        INPUT: x,n, and i (for starting number in the sum), 'sum' for carrying the sum of previous powers of natural numbers/
        OUTPUT: return 0, if the sequence of the numbers doesn't work
                return 1, if the sum of the numbers is equal to x
    */

    if (sum > x){//SUM OVERFLOW, BACKTRACK!
                return 0;}

    if (sum == x){//SUCCESS!
                 return 1;}

    for(int j = 1; j <= x; j++){

        if(powerSum(x,n,i+j,sum+pow(i,n))){return 1;}
        }
        return 0;
}

int powerSumOccurances(int x, int n){
    int occur = 0;
    for (int i = 1; i < x; i++){
        if (powerSum(x,n,i)){occur++;}
    }
    return occur;
}

int main()
{
    int x,n;
    cin >> x >> n;
    int occurances = powerSumOccurances(x,n);
    cout << occurances;
    return 0;
}
